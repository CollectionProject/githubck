; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--split_sections --debug -c --asm --interleave -o.\obj\main.o --depend=.\obj\main.d --feedback=.\obj\wifi.fed --cpu=Cortex-M3 --apcs=interwork -O0 -I..\lwIP\src\include -I..\lwIP\port\include -I..\lwIP\src\include\ipv4 -I..\target -I..\netapp -I..\marvel\driver\inc -I..\marvel\wpa\inc -I..\sdio\inc -I..\main -ID:\keilarm\ARM\INC -ID:\keilarm\ARM\INC\ST\STM32F10x -D__MICROLIB -DIEEE8021X_EAPOL -DOS_NO_C_LIB_DEFINES -DCONFIG_PEERKEY -DCONFIG_IEEE80211W -DCONFIG_IEEE80211R -DxCLOSE_WPA_LIMIT --omf_browse=.\obj\main.crf ..\main\main.c]
                          THUMB

                          AREA ||i.dns_found_callbackx||, CODE, READONLY, ALIGN=1

                  dns_found_callbackx PROC
;;;10     
;;;11     static void dns_found_callbackx(const char *name, struct ip_addr *ipaddr, void *callback_arg){
000000  4770              BX       lr
;;;12     }
;;;13     
                          ENDP


                          AREA ||i.dns_test_test||, CODE, READONLY, ALIGN=2

                  dns_test_test PROC
;;;22     
;;;23     static int dns_test_test()
000000  b510              PUSH     {r4,lr}
;;;24     {
000002  b086              SUB      sp,sp,#0x18
;;;25         struct ip_addr addr;
;;;26         err_t err;
;;;27         char hostname[]="www.yeelink.net";
000004  a308              ADR      r3,|L2.40|
000006  cb0f              LDM      r3,{r0-r3}
000008  ac01              ADD      r4,sp,#4
00000a  c40f              STM      r4!,{r0-r3}
;;;28     
;;;29         if (err = dns_gethostbyname((char*)(hostname), &(addr),dns_found_callbackx,NULL) == ERR_OK) {
00000c  2300              MOVS     r3,#0
00000e  4a0a              LDR      r2,|L2.56|
000010  a905              ADD      r1,sp,#0x14
000012  a801              ADD      r0,sp,#4
000014  f7fffffe          BL       dns_gethostbyname
000018  b908              CBNZ     r0,|L2.30|
00001a  2001              MOVS     r0,#1
00001c  e000              B        |L2.32|
                  |L2.30|
00001e  2000              MOVS     r0,#0
                  |L2.32|
000020  b244              SXTB     r4,r0
;;;30         } else {
;;;31         }
;;;32     }
000022  b006              ADD      sp,sp,#0x18
000024  bd10              POP      {r4,pc}
;;;33     #endif
                          ENDP

000026  0000              DCW      0x0000
                  |L2.40|
000028  7777772e          DCB      "www.yeelink.net",0
00002c  7965656c
000030  696e6b2e
000034  6e657400
                  |L2.56|
                          DCD      dns_found_callbackx

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  main PROC
;;;39       */
;;;40     int  main (void)
000000  bf00              NOP      
;;;41     {
;;;42         /*变量初始化*/
;;;43         extern struct netif netif;
;;;44         extern int app_time;
;;;45         extern int app_time2;
;;;46         extern int newpower_time_out_current_state;
;;;47         extern int g_random;
;;;48     
;;;49         struct lbs_private *priv;
;;;50         char dhcp_ok=0;				//using by dhcp
;;;51         long *cfg_ip;
;;;52     	static u8 state_in[8] = {0};
;;;53         extern char * psk_out;
;;;54         newpower_time_out_current_state = 0;
000002  2000              MOVS     r0,#0
000004  49aa              LDR      r1,|L3.688|
000006  6008              STR      r0,[r1,#0]  ; newpower_time_out_current_state
;;;55     
;;;56         /*芯片函数初始化*/
;;;57         RCC_Configuration();
000008  f7fffffe          BL       RCC_Configuration
;;;58         NVIC_Configuration();
00000c  f7fffffe          BL       NVIC_Configuration
;;;59         GPIO_Configuration();
000010  f7fffffe          BL       GPIO_Configuration
;;;60         /*用户函数初始化*/
;;;61         MAR_POW(1);                         //关闭wifi模块
000014  48a7              LDR      r0,|L3.692|
000016  6800              LDR      r0,[r0,#0]
000018  f4405080          ORR      r0,r0,#0x1000
00001c  49a6              LDR      r1,|L3.696|
00001e  f8c10c0c          STR      r0,[r1,#0xc0c]
;;;62     
;;;63         USART_Configuration(CONSOLE_UART);  //配置串口1到控制台
000022  48a6              LDR      r0,|L3.700|
000024  f7fffffe          BL       USART_Configuration
;;;64         printf("\n\r ############ www.csgsm.com ############ ("__DATE__ " - " __TIME__ ")\n\r\n\r");
000028  48a5              LDR      r0,|L3.704|
00002a  f7fffffe          BL       __2printf
;;;65     
;;;66         mem_init();         //这里先把内存初始化弄完了
00002e  f7fffffe          BL       mem_init
;;;67         //load_netcfg();//加载网络配置参数,如果想要启动保存配置信息到FLASH中请务必打开此选项，否则内部flash功能不生效，请客户自行理解这一部分。
;;;68     
;;;69         priv=init_marvell_driver();         //初始化marvell模块驱动,包括SDIO设备枚举，加载设备固件等操作*/
000032  f7fffffe          BL       init_marvell_driver
000036  4604              MOV      r4,r0
;;;70         lbs_scan_worker(priv);              //扫描wifi网，结果存放在priv->network数据域中，使用bss_descriptor结构体描述*/
000038  4620              MOV      r0,r4
00003a  f7fffffe          BL       lbs_scan_worker
;;;71         printf("################scanning finish####################### \r\n");
00003e  a0a1              ADR      r0,|L3.708|
000040  f7fffffe          BL       __2printf
;;;72     
;;;73         psk_out = mem_malloc(32);
000044  2020              MOVS     r0,#0x20
000046  f7fffffe          BL       mem_malloc
00004a  49ad              LDR      r1,|L3.768|
00004c  6008              STR      r0,[r1,#0]  ; psk_out
;;;74         marvel_assoc_network(priv,marvel_ssid,marvel_key,marvel_mode);  //关联网络  路由器的名称，路由器的密码，模式0路由器|1adhoc模式
00004e  48ad              LDR      r0,|L3.772|
000050  7803              LDRB     r3,[r0,#0]  ; marvel_mode
000052  4aad              LDR      r2,|L3.776|
000054  49ad              LDR      r1,|L3.780|
000056  4620              MOV      r0,r4
000058  f7fffffe          BL       marvel_assoc_network
;;;75         mem_free(psk_out);
00005c  48a8              LDR      r0,|L3.768|
00005e  6800              LDR      r0,[r0,#0]  ; psk_out
000060  f7fffffe          BL       mem_free
;;;76     
;;;77         Init_lwIP();                        //初始化协议栈
000064  f7fffffe          BL       Init_lwIP
;;;78         printf("################lwIP stack  finish####################### \r\n");
000068  a0a9              ADR      r0,|L3.784|
00006a  f7fffffe          BL       __2printf
;;;79         watch_dog_config();                 //看门狗测试
00006e  f7fffffe          BL       watch_dog_config
;;;80     
;;;81         cfg_ip=(long *)wireless_ip;
000072  4db7              LDR      r5,|L3.848|
;;;82         if(*cfg_ip!=0)
000074  6828              LDR      r0,[r5,#0]
000076  b168              CBZ      r0,|L3.148|
;;;83         {
;;;84             //static ip,web config
;;;85             dhcp_ok=1;
000078  bf00              NOP      
;;;86     #if LWIP_DHCP_SERVER
;;;87             if(marvel_mode=='1')        //adhoc mode start dhcp server
;;;88                 dhcpsrv_start(&netif);  //dhcp server start
;;;89     #endif
;;;90             httpd_init();               //建立网页服务器
00007a  f7fffffe          BL       httpd_init
;;;91             printf("Http init [OK]\r\n");
00007e  a0b5              ADR      r0,|L3.852|
000080  f7fffffe          BL       __2printf
;;;92             //TCP_Client_Init();          //建立TCP客户端连接到PC
;;;93             //printf("TCP Client init [OK]\r\n");
;;;94             tcp_server_init();          //建立TCP服务器
000084  f7fffffe          BL       tcp_server_init
;;;95             printf("TCP Server init [OK]\r\n");
000088  a0b7              ADR      r0,|L3.872|
00008a  f7fffffe          BL       __2printf
;;;96             //netbios_init();
;;;97             printf("################all stack finish####################### \r\n");
00008e  a0bc              ADR      r0,|L3.896|
000090  f7fffffe          BL       __2printf
                  |L3.148|
;;;98         }
;;;99     
;;;100    
;;;101    /***********************DHCP Assign IP**********************************************/
;;;102    #if 0
;;;103        while(0)
;;;104        {
;;;105            // 这里是关闭DHCP 客户端
;;;106            unsigned char *pchr;
;;;107            if((priv->connect_status==LBS_DISCONNECTED)&&
;;;108               marvel_mode=='0')//AP掉线,重启网卡,Ad-hoc不处理。
;;;109            {
;;;110                printf("LBS_DISCONNECTED!!!\r\n");
;;;111                //NVIC_GenerateSystemReset();
;;;112                config_delay();
;;;113                config_delay();
;;;114                config_delay();
;;;115                lbs_scan_worker(priv);//扫描wifi网，结果存放在priv->network数据域中，使用bss_descriptor结构体描述*/
;;;116                printf("####################################### re scanning finish !\r\n");
;;;117                psk_out = mem_malloc(32);
;;;118                marvel_assoc_network(priv,marvel_ssid,marvel_key,marvel_mode);//关联网络
;;;119                mem_free(psk_out);
;;;120            }
;;;121            IWDG_ReloadCounter();
;;;122            ethernetif_input(&netif);
;;;123            IWDG_ReloadCounter();
;;;124    
;;;125            if((!dhcp_ok)&&(netif.dhcp!=NULL &&
;;;126                            netif.dhcp->offered_ip_addr.addr!=0 &&
;;;127                            netif.dhcp->offered_sn_mask.addr!=0 &&
;;;128                            netif.dhcp->offered_gw_addr.addr!=0)){
;;;129                dhcp_ok=1;
;;;130                pchr=(unsigned char *)&netif.dhcp->offered_ip_addr.addr;
;;;131                printf("dhcp ip=%d:%d:%d:%d\n",pchr[0],pchr[1],pchr[2],pchr[3]);
;;;132                pchr=(unsigned char *)&netif.dhcp->offered_gw_addr.addr;
;;;133                printf("dhcp gw=%d:%d:%d:%d\n",pchr[0],pchr[1],pchr[2],pchr[3]);
;;;134                netif_set_addr(&netif, &(netif.dhcp->offered_ip_addr),
;;;135                               &(netif.dhcp->offered_sn_mask),&(netif.dhcp->offered_gw_addr));
;;;136                printf("dhcp ok!\n");
;;;137                netif_set_default(&netif);    //reassign ip address
;;;138                netif_set_up(&netif);
;;;139                ip_init();
;;;140                dhcp_stop(&netif);
;;;141                httpd_init();
;;;142                TCP_Client_Init();
;;;143                tcp_server_init();
;;;144                netbios_init();
;;;145            }
;;;146            else if(dhcp_ok)//assign ip address ok
;;;147                break;
;;;148        }
;;;149    #endif
;;;150    
;;;151    /************************** network testing**************************************************************/
;;;152        while(1)
000094  e10a              B        |L3.684|
                  |L3.150|
;;;153        {	
;;;154        	if(INPUT_0_PIN != state_in[0]){
000096  48c9              LDR      r0,|L3.956|
000098  6800              LDR      r0,[r0,#0]
00009a  f3c01040          UBFX     r0,r0,#5,#1
00009e  49c8              LDR      r1,|L3.960|
0000a0  7809              LDRB     r1,[r1,#0]  ; state_in
0000a2  4288              CMP      r0,r1
0000a4  d010              BEQ      |L3.200|
;;;155    			printf("INPUT_0_PIN:%d,state_in[0]:%d\r\n",INPUT_0_PIN,state_in[0]);
0000a6  48c6              LDR      r0,|L3.960|
0000a8  7802              LDRB     r2,[r0,#0]  ; state_in
0000aa  48c4              LDR      r0,|L3.956|
0000ac  6800              LDR      r0,[r0,#0]
0000ae  f3c01140          UBFX     r1,r0,#5,#1
0000b2  a0c4              ADR      r0,|L3.964|
0000b4  f7fffffe          BL       __2printf
;;;156    			state_in[0] = INPUT_0_PIN;
0000b8  487f              LDR      r0,|L3.696|
0000ba  f8d00c08          LDR      r0,[r0,#0xc08]
0000be  f3c01040          UBFX     r0,r0,#5,#1
0000c2  49bf              LDR      r1,|L3.960|
0000c4  7008              STRB     r0,[r1,#0]
0000c6  e0ab              B        |L3.544|
                  |L3.200|
;;;157    		}else if(INPUT_1_PIN != state_in[1]){
0000c8  48c6              LDR      r0,|L3.996|
0000ca  6800              LDR      r0,[r0,#0]
0000cc  f3c03000          UBFX     r0,r0,#12,#1
0000d0  49bb              LDR      r1,|L3.960|
0000d2  7849              LDRB     r1,[r1,#1]  ; state_in
0000d4  4288              CMP      r0,r1
0000d6  d010              BEQ      |L3.250|
;;;158    			printf("INPUT_1_PIN:%d,state_in[1]:%d\r\n",INPUT_1_PIN,state_in[1]);
0000d8  48b9              LDR      r0,|L3.960|
0000da  7842              LDRB     r2,[r0,#1]  ; state_in
0000dc  48c1              LDR      r0,|L3.996|
0000de  6800              LDR      r0,[r0,#0]
0000e0  f3c03100          UBFX     r1,r0,#12,#1
0000e4  a0c0              ADR      r0,|L3.1000|
0000e6  f7fffffe          BL       __2printf
;;;159    			state_in[1] = INPUT_1_PIN;
0000ea  4873              LDR      r0,|L3.696|
0000ec  f8d00808          LDR      r0,[r0,#0x808]
0000f0  f3c03000          UBFX     r0,r0,#12,#1
0000f4  49b2              LDR      r1,|L3.960|
0000f6  7048              STRB     r0,[r1,#1]
0000f8  e092              B        |L3.544|
                  |L3.250|
;;;160    		}else if(INPUT_2_PIN != state_in[2]){
0000fa  48c3              LDR      r0,|L3.1032|
0000fc  6880              LDR      r0,[r0,#8]
0000fe  f3c010c0          UBFX     r0,r0,#7,#1
000102  49af              LDR      r1,|L3.960|
000104  7889              LDRB     r1,[r1,#2]  ; state_in
000106  4288              CMP      r0,r1
000108  d00f              BEQ      |L3.298|
;;;161    			printf("INPUT_2_PIN:%d,state_in[2]:%d\r\n",INPUT_2_PIN,state_in[2]);
00010a  48ad              LDR      r0,|L3.960|
00010c  7882              LDRB     r2,[r0,#2]  ; state_in
00010e  48be              LDR      r0,|L3.1032|
000110  6880              LDR      r0,[r0,#8]
000112  f3c011c0          UBFX     r1,r0,#7,#1
000116  a0bd              ADR      r0,|L3.1036|
000118  f7fffffe          BL       __2printf
;;;162    			state_in[2] = INPUT_2_PIN;
00011c  48ba              LDR      r0,|L3.1032|
00011e  6880              LDR      r0,[r0,#8]
000120  f3c010c0          UBFX     r0,r0,#7,#1
000124  49a6              LDR      r1,|L3.960|
000126  7088              STRB     r0,[r1,#2]
000128  e07a              B        |L3.544|
                  |L3.298|
;;;163    		}else if(INPUT_3_PIN != state_in[3]){
00012a  48ae              LDR      r0,|L3.996|
00012c  6800              LDR      r0,[r0,#0]
00012e  f3c020c0          UBFX     r0,r0,#11,#1
000132  49a3              LDR      r1,|L3.960|
000134  78c9              LDRB     r1,[r1,#3]  ; state_in
000136  4288              CMP      r0,r1
000138  d010              BEQ      |L3.348|
;;;164    			printf("INPUT_3_PIN:%d,state_in[3]:%d\r\n",INPUT_3_PIN,state_in[3]);
00013a  48a1              LDR      r0,|L3.960|
00013c  78c2              LDRB     r2,[r0,#3]  ; state_in
00013e  48a9              LDR      r0,|L3.996|
000140  6800              LDR      r0,[r0,#0]
000142  f3c021c0          UBFX     r1,r0,#11,#1
000146  a0b9              ADR      r0,|L3.1068|
000148  f7fffffe          BL       __2printf
;;;165    			state_in[3] = INPUT_3_PIN;
00014c  485a              LDR      r0,|L3.696|
00014e  f8d00808          LDR      r0,[r0,#0x808]
000152  f3c020c0          UBFX     r0,r0,#11,#1
000156  499a              LDR      r1,|L3.960|
000158  70c8              STRB     r0,[r1,#3]
00015a  e061              B        |L3.544|
                  |L3.348|
;;;166    		}else if(INPUT_4_PIN != state_in[4]){
00015c  48aa              LDR      r0,|L3.1032|
00015e  6880              LDR      r0,[r0,#8]
000160  f3c01080          UBFX     r0,r0,#6,#1
000164  4996              LDR      r1,|L3.960|
000166  7909              LDRB     r1,[r1,#4]  ; state_in
000168  4288              CMP      r0,r1
00016a  d00f              BEQ      |L3.396|
;;;167    			printf("INPUT_4_PIN:%d,state_in[4]:%d\r\n",INPUT_4_PIN,state_in[4]);
00016c  4894              LDR      r0,|L3.960|
00016e  7902              LDRB     r2,[r0,#4]  ; state_in
000170  48a5              LDR      r0,|L3.1032|
000172  6880              LDR      r0,[r0,#8]
000174  f3c01180          UBFX     r1,r0,#6,#1
000178  a0b4              ADR      r0,|L3.1100|
00017a  f7fffffe          BL       __2printf
;;;168    			state_in[4] = INPUT_4_PIN;
00017e  48a2              LDR      r0,|L3.1032|
000180  6880              LDR      r0,[r0,#8]
000182  f3c01080          UBFX     r0,r0,#6,#1
000186  498e              LDR      r1,|L3.960|
000188  7108              STRB     r0,[r1,#4]
00018a  e049              B        |L3.544|
                  |L3.396|
;;;169    		}else if(INPUT_5_PIN != state_in[5]){
00018c  4895              LDR      r0,|L3.996|
00018e  6800              LDR      r0,[r0,#0]
000190  f3c02000          UBFX     r0,r0,#8,#1
000194  498a              LDR      r1,|L3.960|
000196  7949              LDRB     r1,[r1,#5]  ; state_in
000198  4288              CMP      r0,r1
00019a  d010              BEQ      |L3.446|
;;;170    			printf("INPUT_5_PIN:%d,state_in[5]:%d\r\n",INPUT_5_PIN,state_in[5]);
00019c  4888              LDR      r0,|L3.960|
00019e  7942              LDRB     r2,[r0,#5]  ; state_in
0001a0  4890              LDR      r0,|L3.996|
0001a2  6800              LDR      r0,[r0,#0]
0001a4  f3c02100          UBFX     r1,r0,#8,#1
0001a8  a0b0              ADR      r0,|L3.1132|
0001aa  f7fffffe          BL       __2printf
;;;171    			state_in[5] = INPUT_5_PIN;
0001ae  4842              LDR      r0,|L3.696|
0001b0  f8d00808          LDR      r0,[r0,#0x808]
0001b4  f3c02000          UBFX     r0,r0,#8,#1
0001b8  4981              LDR      r1,|L3.960|
0001ba  7148              STRB     r0,[r1,#5]
0001bc  e030              B        |L3.544|
                  |L3.446|
;;;172    		}else if(INPUT_6_PIN != state_in[6]){
0001be  487f              LDR      r0,|L3.956|
0001c0  6800              LDR      r0,[r0,#0]
0001c2  f3c030c0          UBFX     r0,r0,#15,#1
0001c6  497e              LDR      r1,|L3.960|
0001c8  7989              LDRB     r1,[r1,#6]  ; state_in
0001ca  4288              CMP      r0,r1
0001cc  d010              BEQ      |L3.496|
;;;173    			printf("INPUT_6_PIN:%d,state_in[6]:%d\r\n",INPUT_6_PIN,state_in[6]);
0001ce  487c              LDR      r0,|L3.960|
0001d0  7982              LDRB     r2,[r0,#6]  ; state_in
0001d2  487a              LDR      r0,|L3.956|
0001d4  6800              LDR      r0,[r0,#0]
0001d6  f3c031c0          UBFX     r1,r0,#15,#1
0001da  a0ac              ADR      r0,|L3.1164|
0001dc  f7fffffe          BL       __2printf
;;;174    			state_in[6] = INPUT_6_PIN;
0001e0  4835              LDR      r0,|L3.696|
0001e2  f8d00c08          LDR      r0,[r0,#0xc08]
0001e6  f3c030c0          UBFX     r0,r0,#15,#1
0001ea  4975              LDR      r1,|L3.960|
0001ec  7188              STRB     r0,[r1,#6]
0001ee  e017              B        |L3.544|
                  |L3.496|
;;;175    		}else if(INPUT_7_PIN != state_in[7]){
0001f0  4872              LDR      r0,|L3.956|
0001f2  6800              LDR      r0,[r0,#0]
0001f4  f3c01080          UBFX     r0,r0,#6,#1
0001f8  4971              LDR      r1,|L3.960|
0001fa  79c9              LDRB     r1,[r1,#7]  ; state_in
0001fc  4288              CMP      r0,r1
0001fe  d00f              BEQ      |L3.544|
;;;176    			printf("INPUT_7_PIN:%d,state_in[7]:%d\r\n",INPUT_7_PIN,state_in[7]);
000200  486f              LDR      r0,|L3.960|
000202  79c2              LDRB     r2,[r0,#7]  ; state_in
000204  486d              LDR      r0,|L3.956|
000206  6800              LDR      r0,[r0,#0]
000208  f3c01180          UBFX     r1,r0,#6,#1
00020c  a0a7              ADR      r0,|L3.1196|
00020e  f7fffffe          BL       __2printf
;;;177    			state_in[7] = INPUT_7_PIN;
000212  4829              LDR      r0,|L3.696|
000214  f8d00c08          LDR      r0,[r0,#0xc08]
000218  f3c01080          UBFX     r0,r0,#6,#1
00021c  4968              LDR      r1,|L3.960|
00021e  71c8              STRB     r0,[r1,#7]
                  |L3.544|
;;;178    		} 		
;;;179            if((priv->connect_status==LBS_DISCONNECTED)&&marvel_mode=='0')      //AP掉线,重启网卡,Ad-hoc不处理。
000220  f8d401dc          LDR      r0,[r4,#0x1dc]
000224  2801              CMP      r0,#1
000226  d122              BNE      |L3.622|
000228  4836              LDR      r0,|L3.772|
00022a  7800              LDRB     r0,[r0,#0]  ; marvel_mode
00022c  2830              CMP      r0,#0x30
00022e  d11e              BNE      |L3.622|
;;;180            {
;;;181                printf("LBS_DISCONNECTED!!!\r\n");
000230  a0a6              ADR      r0,|L3.1228|
000232  f7fffffe          BL       __2printf
;;;182    #if (AUTO_CONN == 1)
;;;183                //如果断开连接进行重新连接
;;;184                config_delay();
000236  f7fffffe          BL       config_delay
;;;185                config_delay();
00023a  f7fffffe          BL       config_delay
;;;186                config_delay();
00023e  f7fffffe          BL       config_delay
;;;187                lbs_scan_worker(priv);//扫描wifi网，结果存放在priv->network数据域中，使用bss_descriptor结构体描述*/
000242  4620              MOV      r0,r4
000244  f7fffffe          BL       lbs_scan_worker
;;;188                printf("####################################### re scanning finish !\r\n");
000248  a0a6              ADR      r0,|L3.1252|
00024a  f7fffffe          BL       __2printf
;;;189                psk_out = mem_malloc(32);
00024e  2020              MOVS     r0,#0x20
000250  f7fffffe          BL       mem_malloc
000254  492a              LDR      r1,|L3.768|
000256  6008              STR      r0,[r1,#0]  ; psk_out
;;;190                marvel_assoc_network(priv,marvel_ssid,marvel_key,marvel_mode);//关联网络
000258  482a              LDR      r0,|L3.772|
00025a  7803              LDRB     r3,[r0,#0]  ; marvel_mode
00025c  4a2a              LDR      r2,|L3.776|
00025e  492b              LDR      r1,|L3.780|
000260  4620              MOV      r0,r4
000262  f7fffffe          BL       marvel_assoc_network
;;;191                mem_free(psk_out);
000266  4826              LDR      r0,|L3.768|
000268  6800              LDR      r0,[r0,#0]  ; psk_out
00026a  f7fffffe          BL       mem_free
                  |L3.622|
;;;192    #elif (AUTO_CONN == 2)
;;;193                NVIC_GenerateSystemReset(); // reset system
;;;194    #endif
;;;195            }
;;;196    
;;;197            IWDG_ReloadCounter();
00026e  f7fffffe          BL       IWDG_ReloadCounter
;;;198            ethernetif_input(&netif);
000272  48ac              LDR      r0,|L3.1316|
000274  f7fffffe          BL       ethernetif_input
;;;199            IWDG_ReloadCounter();
000278  f7fffffe          BL       IWDG_ReloadCounter
;;;200            timer_thread();
00027c  f7fffffe          BL       timer_thread
;;;201            IWDG_ReloadCounter();
000280  f7fffffe          BL       IWDG_ReloadCounter
;;;202    
;;;203            if(app_time>10)
000284  48a8              LDR      r0,|L3.1320|
000286  6800              LDR      r0,[r0,#0]  ; app_time
000288  280a              CMP      r0,#0xa
00028a  dd07              BLE      |L3.668|
;;;204            { // sleep 18 tick
;;;205                if (newpower_time_out_current_state != 8){
00028c  4808              LDR      r0,|L3.688|
00028e  6800              LDR      r0,[r0,#0]  ; newpower_time_out_current_state
000290  2808              CMP      r0,#8
000292  d000              BEQ      |L3.662|
;;;206                    continue;
000294  e00a              B        |L3.684|
                  |L3.662|
;;;207                }
;;;208                app_time=0;
000296  2000              MOVS     r0,#0
000298  49a3              LDR      r1,|L3.1320|
00029a  6008              STR      r0,[r1,#0]  ; app_time
                  |L3.668|
;;;209            }
;;;210    
;;;211            if (app_time2 > 50)
00029c  48a3              LDR      r0,|L3.1324|
00029e  6800              LDR      r0,[r0,#0]  ; app_time2
0002a0  2832              CMP      r0,#0x32
0002a2  dd02              BLE      |L3.682|
;;;212            {
;;;213                app_time2 = 0;
0002a4  2000              MOVS     r0,#0
0002a6  49a1              LDR      r1,|L3.1324|
0002a8  6008              STR      r0,[r1,#0]  ; app_time2
                  |L3.682|
0002aa  bf00              NOP                            ;206
                  |L3.684|
0002ac  e6f3              B        |L3.150|
;;;214            }
;;;215        }
;;;216    }
                          ENDP

0002ae  0000              DCW      0x0000
                  |L3.688|
                          DCD      newpower_time_out_current_state
                  |L3.692|
                          DCD      0x40010c0c
                  |L3.696|
                          DCD      0x40010000
                  |L3.700|
                          DCD      0x40013800
                  |L3.704|
                          DCD      ||.constdata||
                  |L3.708|
0002c4  23232323          DCB      "################scanning finish####################### "
0002c8  23232323
0002cc  23232323
0002d0  23232323
0002d4  7363616e
0002d8  6e696e67
0002dc  2066696e
0002e0  69736823
0002e4  23232323
0002e8  23232323
0002ec  23232323
0002f0  23232323
0002f4  23232323
0002f8  232320  
0002fb  0d0a00            DCB      "\r\n",0
0002fe  00                DCB      0
0002ff  00                DCB      0
                  |L3.768|
                          DCD      psk_out
                  |L3.772|
                          DCD      marvel_mode
                  |L3.776|
                          DCD      marvel_key
                  |L3.780|
                          DCD      marvel_ssid
                  |L3.784|
000310  23232323          DCB      "################lwIP stack  finish#####################"
000314  23232323
000318  23232323
00031c  23232323
000320  6c774950
000324  20737461
000328  636b2020
00032c  66696e69
000330  73682323
000334  23232323
000338  23232323
00033c  23232323
000340  23232323
000344  232323  
000347  2323200d          DCB      "## \r\n",0
00034b  0a00    
00034d  00                DCB      0
00034e  00                DCB      0
00034f  00                DCB      0
                  |L3.848|
                          DCD      wireless_ip
                  |L3.852|
000354  48747470          DCB      "Http init [OK]\r\n",0
000358  20696e69
00035c  74205b4f
000360  4b5d0d0a
000364  00      
000365  00                DCB      0
000366  00                DCB      0
000367  00                DCB      0
                  |L3.872|
000368  54435020          DCB      "TCP Server init [OK]\r\n",0
00036c  53657276
000370  65722069
000374  6e697420
000378  5b4f4b5d
00037c  0d0a00  
00037f  00                DCB      0
                  |L3.896|
000380  23232323          DCB      "################all stack finish#######################"
000384  23232323
000388  23232323
00038c  23232323
000390  616c6c20
000394  73746163
000398  6b206669
00039c  6e697368
0003a0  23232323
0003a4  23232323
0003a8  23232323
0003ac  23232323
0003b0  23232323
0003b4  232323  
0003b7  200d0a00          DCB      " \r\n",0
0003bb  00                DCB      0
                  |L3.956|
                          DCD      0x40010c08
                  |L3.960|
                          DCD      state_in
                  |L3.964|
0003c4  494e5055          DCB      "INPUT_0_PIN:%d,state_in[0]:%d\r\n",0
0003c8  545f305f
0003cc  50494e3a
0003d0  25642c73
0003d4  74617465
0003d8  5f696e5b
0003dc  305d3a25
0003e0  640d0a00
                  |L3.996|
                          DCD      0x40010808
                  |L3.1000|
0003e8  494e5055          DCB      "INPUT_1_PIN:%d,state_in[1]:%d\r\n",0
0003ec  545f315f
0003f0  50494e3a
0003f4  25642c73
0003f8  74617465
0003fc  5f696e5b
000400  315d3a25
000404  640d0a00
                  |L3.1032|
                          DCD      0x40011000
                  |L3.1036|
00040c  494e5055          DCB      "INPUT_2_PIN:%d,state_in[2]:%d\r\n",0
000410  545f325f
000414  50494e3a
000418  25642c73
00041c  74617465
000420  5f696e5b
000424  325d3a25
000428  640d0a00
                  |L3.1068|
00042c  494e5055          DCB      "INPUT_3_PIN:%d,state_in[3]:%d\r\n",0
000430  545f335f
000434  50494e3a
000438  25642c73
00043c  74617465
000440  5f696e5b
000444  335d3a25
000448  640d0a00
                  |L3.1100|
00044c  494e5055          DCB      "INPUT_4_PIN:%d,state_in[4]:%d\r\n",0
000450  545f345f
000454  50494e3a
000458  25642c73
00045c  74617465
000460  5f696e5b
000464  345d3a25
000468  640d0a00
                  |L3.1132|
00046c  494e5055          DCB      "INPUT_5_PIN:%d,state_in[5]:%d\r\n",0
000470  545f355f
000474  50494e3a
000478  25642c73
00047c  74617465
000480  5f696e5b
000484  355d3a25
000488  640d0a00
                  |L3.1164|
00048c  494e5055          DCB      "INPUT_6_PIN:%d,state_in[6]:%d\r\n",0
000490  545f365f
000494  50494e3a
000498  25642c73
00049c  74617465
0004a0  5f696e5b
0004a4  365d3a25
0004a8  640d0a00
                  |L3.1196|
0004ac  494e5055          DCB      "INPUT_7_PIN:%d,state_in[7]:%d\r\n",0
0004b0  545f375f
0004b4  50494e3a
0004b8  25642c73
0004bc  74617465
0004c0  5f696e5b
0004c4  375d3a25
0004c8  640d0a00
                  |L3.1228|
0004cc  4c42535f          DCB      "LBS_DISCONNECTED!!!\r\n",0
0004d0  44495343
0004d4  4f4e4e45
0004d8  43544544
0004dc  2121210d
0004e0  0a00    
0004e2  00                DCB      0
0004e3  00                DCB      0
                  |L3.1252|
0004e4  23232323          DCB      "####################################### re scanning fin"
0004e8  23232323
0004ec  23232323
0004f0  23232323
0004f4  23232323
0004f8  23232323
0004fc  23232323
000500  23232323
000504  23232323
000508  23232320
00050c  72652073
000510  63616e6e
000514  696e6720
000518  66696e  
00051b  69736820          DCB      "ish !\r\n",0
00051f  210d0a00
000523  00                DCB      0
                  |L3.1316|
                          DCD      netif
                  |L3.1320|
                          DCD      app_time
                  |L3.1324|
                          DCD      app_time2

                          AREA ||i.mmc_signal_sdio_irq||, CODE, READONLY, ALIGN=1

                  mmc_signal_sdio_irq PROC
;;;220    } */
;;;221    static void mmc_signal_sdio_irq(struct mmc_host *host)
000000  b510              PUSH     {r4,lr}
;;;222    {
000002  4604              MOV      r4,r0
;;;223    	host->ops->enable_sdio_irq(host, 0);
000004  6860              LDR      r0,[r4,#4]
000006  2100              MOVS     r1,#0
000008  6982              LDR      r2,[r0,#0x18]
00000a  4620              MOV      r0,r4
00000c  4790              BLX      r2
;;;224    	sdio_irq_thread(host);
00000e  4620              MOV      r0,r4
000010  f7fffffe          BL       sdio_irq_thread
;;;225    }
000014  bd10              POP      {r4,pc}
;;;226    
                          ENDP


                          AREA ||i.recv_mac_event||, CODE, READONLY, ALIGN=2

                  recv_mac_event PROC
;;;13     
;;;14     void recv_mac_event(int event)
000000  2803              CMP      r0,#3
;;;15     {
;;;16         //接收到网卡异常，将状态置为断线
;;;17         if (event == 3 || event == 8 || event == 9 || event == 14 || event == 13 )
000002  d007              BEQ      |L5.20|
000004  2808              CMP      r0,#8
000006  d005              BEQ      |L5.20|
000008  2809              CMP      r0,#9
00000a  d003              BEQ      |L5.20|
00000c  280e              CMP      r0,#0xe
00000e  d001              BEQ      |L5.20|
000010  280d              CMP      r0,#0xd
000012  d104              BNE      |L5.30|
                  |L5.20|
;;;18         {
;;;19             pgmarvel_priv->connect_status = LBS_DISCONNECTED;
000014  2101              MOVS     r1,#1
000016  4a02              LDR      r2,|L5.32|
000018  6812              LDR      r2,[r2,#0]  ; pgmarvel_priv
00001a  f8c211dc          STR      r1,[r2,#0x1dc]
                  |L5.30|
;;;20         }
;;;21     }
00001e  4770              BX       lr
;;;22     
                          ENDP

                  |L5.32|
                          DCD      pgmarvel_priv

                          AREA ||i.xdbug_buf||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                  xdbug_buf PROC
;;;147    #define RUN_TEST printk("RUN_TEST >>> LINE:%d ,,, FUNCTION:%s ,,, FILE:%s \r\n",__LINE__,__FUNCTION__,__FILE__);
;;;148    static void xdbug_buf(const char * name , const unsigned char * buf , const int len)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;149    {
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
000008  4617              MOV      r7,r2
;;;150    	int i = 0;
00000a  2400              MOVS     r4,#0
;;;151    	printf("dbug buf [%s]\n",name);
00000c  4629              MOV      r1,r5
00000e  a008              ADR      r0,|L6.48|
000010  f7fffffe          BL       __2printf
;;;152    	for(;i<len;i++)
000014  e004              B        |L6.32|
                  |L6.22|
;;;153    	{
;;;154    		printf("0x%02x,",buf[i]);
000016  5d31              LDRB     r1,[r6,r4]
000018  a009              ADR      r0,|L6.64|
00001a  f7fffffe          BL       __2printf
00001e  1c64              ADDS     r4,r4,#1              ;152
                  |L6.32|
000020  42bc              CMP      r4,r7                 ;152
000022  dbf8              BLT      |L6.22|
;;;155    	}
;;;156    	printf("\n");
000024  a008              ADR      r0,|L6.72|
000026  f7fffffe          BL       __2printf
;;;157    }
00002a  e8bd81f0          POP      {r4-r8,pc}
;;;158    #define DEBUG_PARAM_SDIO
                          ENDP

00002e  0000              DCW      0x0000
                  |L6.48|
000030  64627567          DCB      "dbug buf [%s]\n",0
000034  20627566
000038  205b2573
00003c  5d0a00  
00003f  00                DCB      0
                  |L6.64|
000040  30782530          DCB      "0x%02x,",0
000044  32782c00
                  |L6.72|
000048  0a00              DCB      "\n",0
00004a  00                DCB      0
00004b  00                DCB      0

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

000000  0a0d2023          DCB      0x0a,0x0d,0x20,0x23
000004  23232323          DCB      0x23,0x23,0x23,0x23
000008  23232323          DCB      0x23,0x23,0x23,0x23
00000c  23232320          DCB      0x23,0x23,0x23,0x20
000010  7777772e          DCB      0x77,0x77,0x77,0x2e
000014  63736773          DCB      0x63,0x73,0x67,0x73
000018  6d2e636f          DCB      0x6d,0x2e,0x63,0x6f
00001c  6d202323          DCB      0x6d,0x20,0x23,0x23
000020  23232323          DCB      0x23,0x23,0x23,0x23
000024  23232323          DCB      0x23,0x23,0x23,0x23
000028  23232028          DCB      0x23,0x23,0x20,0x28
00002c  44656320          DCB      0x44,0x65,0x63,0x20
000030  32312032          DCB      0x32,0x31,0x20,0x32
000034  30313320          DCB      0x30,0x31,0x33,0x20
000038  2d203130          DCB      0x2d,0x20,0x31,0x30
00003c  3a31383a          DCB      0x3a,0x31,0x38,0x3a
000040  3435290a          DCB      0x34,0x35,0x29,0x0a
000044  0d0a0d00          DCB      0x0d,0x0a,0x0d,0x00

                          AREA ||.data||, DATA, ALIGN=0

                  state_in
000000  00000000          DCB      0x00,0x00,0x00,0x00
                          DCDU     0x00000000

                  __ARM_use_no_argv EQU 0
