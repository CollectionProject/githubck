; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--split_sections --debug -c --asm --interleave -o.\obj\netif.o --depend=.\obj\netif.d --feedback=.\obj\wifi.fed --cpu=Cortex-M3 --apcs=interwork -O0 -I..\lwIP\src\include -I..\lwIP\port\include -I..\lwIP\src\include\ipv4 -I..\target -I..\netapp -I..\marvel\driver\inc -I..\marvel\wpa\inc -I..\sdio\inc -I..\main -ID:\keilarm\ARM\INC -ID:\keilarm\ARM\INC\ST\STM32F10x -D__MICROLIB -DIEEE8021X_EAPOL -DOS_NO_C_LIB_DEFINES -DCONFIG_PEERKEY -DCONFIG_IEEE80211W -DCONFIG_IEEE80211R -DxCLOSE_WPA_LIMIT --omf_browse=.\obj\netif.crf ..\lwIP\src\core\netif.c]
                          THUMB

                          AREA ||i.netif_add||, CODE, READONLY, ALIGN=2

                  netif_add PROC
;;;84     struct netif *
;;;85     netif_add(struct netif *netif, struct ip_addr *ipaddr, struct ip_addr *netmask,
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;86       struct ip_addr *gw,
;;;87       void *state,
;;;88       err_t (* init)(struct netif *netif),
;;;89       err_t (* input)(struct pbuf *p, struct netif *netif))
;;;90     {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
00000a  461f              MOV      r7,r3
00000c  e9dda909          LDRD     r10,r9,[sp,#0x24]
000010  f8dd8020          LDR      r8,[sp,#0x20]
;;;91       static u8_t netifnum = 0;
;;;92     
;;;93       /* reset new interface configuration state */
;;;94       netif->ip_addr.addr = 0;
000014  2000              MOVS     r0,#0
000016  6060              STR      r0,[r4,#4]
;;;95       netif->netmask.addr = 0;
000018  60a0              STR      r0,[r4,#8]
;;;96       netif->gw.addr = 0;
00001a  60e0              STR      r0,[r4,#0xc]
;;;97       netif->flags = 0;
00001c  f8840032          STRB     r0,[r4,#0x32]
;;;98     #if LWIP_DHCP
;;;99       /* netif not under DHCP control by default */
;;;100      netif->dhcp = NULL;
000020  6220              STR      r0,[r4,#0x20]
;;;101    #endif /* LWIP_DHCP */
;;;102    #if LWIP_AUTOIP
;;;103      /* netif not under AutoIP control by default */
;;;104      netif->autoip = NULL;
;;;105    #endif /* LWIP_AUTOIP */
;;;106    #if LWIP_NETIF_STATUS_CALLBACK
;;;107      netif->status_callback = NULL;
;;;108    #endif /* LWIP_NETIF_STATUS_CALLBACK */
;;;109    #if LWIP_NETIF_LINK_CALLBACK
;;;110      netif->link_callback = NULL;
;;;111    #endif /* LWIP_NETIF_LINK_CALLBACK */
;;;112    #if LWIP_IGMP
;;;113      netif->igmp_mac_filter = NULL;
;;;114    #endif /* LWIP_IGMP */
;;;115    #if ENABLE_LOOPBACK
;;;116      netif->loop_first = NULL;
;;;117      netif->loop_last = NULL;
;;;118    #endif /* ENABLE_LOOPBACK */
;;;119    
;;;120      /* remember netif specific state information data */
;;;121      netif->state = state;
000022  f8c4801c          STR      r8,[r4,#0x1c]
;;;122      netif->num = netifnum++;
000026  4816              LDR      r0,|L1.128|
000028  7800              LDRB     r0,[r0,#0]  ; netifnum
00002a  f8840035          STRB     r0,[r4,#0x35]
00002e  4814              LDR      r0,|L1.128|
000030  7800              LDRB     r0,[r0,#0]  ; netifnum
000032  1c40              ADDS     r0,r0,#1
000034  4912              LDR      r1,|L1.128|
000036  7008              STRB     r0,[r1,#0]
;;;123      netif->input = input;
000038  f8c49010          STR      r9,[r4,#0x10]
;;;124    #if LWIP_NETIF_HWADDRHINT
;;;125      netif->addr_hint = NULL;
;;;126    #endif /* LWIP_NETIF_HWADDRHINT*/
;;;127    #if ENABLE_LOOPBACK && LWIP_LOOPBACK_MAX_PBUFS
;;;128      netif->loop_cnt_current = 0;
;;;129    #endif /* ENABLE_LOOPBACK && LWIP_LOOPBACK_MAX_PBUFS */
;;;130    
;;;131      netif_set_addr(netif, ipaddr, netmask, gw);
00003c  463b              MOV      r3,r7
00003e  4632              MOV      r2,r6
000040  4629              MOV      r1,r5
000042  4620              MOV      r0,r4
000044  f7fffffe          BL       netif_set_addr
;;;132    
;;;133      /* call user specified initialization function for netif */
;;;134      if (init(netif) != ERR_OK) {
000048  4620              MOV      r0,r4
00004a  47d0              BLX      r10
00004c  b110              CBZ      r0,|L1.84|
;;;135        return NULL;
00004e  2000              MOVS     r0,#0
                  |L1.80|
;;;136      }
;;;137    
;;;138      /* add this netif to the list */
;;;139      netif->next = netif_list;
;;;140      netif_list = netif;
;;;141      snmp_inc_iflist();
;;;142    
;;;143    #if LWIP_IGMP
;;;144      /* start IGMP processing */
;;;145      if (netif->flags & NETIF_FLAG_IGMP) {
;;;146        igmp_start( netif);
;;;147      }
;;;148    #endif /* LWIP_IGMP */
;;;149    
;;;150      LWIP_DEBUGF(NETIF_DEBUG, ("netif: added interface %c%c IP addr ",
;;;151        netif->name[0], netif->name[1]));
;;;152      ip_addr_debug_print(NETIF_DEBUG, ipaddr);
;;;153      LWIP_DEBUGF(NETIF_DEBUG, (" netmask "));
;;;154      ip_addr_debug_print(NETIF_DEBUG, netmask);
;;;155      LWIP_DEBUGF(NETIF_DEBUG, (" gw "));
;;;156      ip_addr_debug_print(NETIF_DEBUG, gw);
;;;157      LWIP_DEBUGF(NETIF_DEBUG, ("\n"));
;;;158      return netif;
;;;159    }
000050  e8bd87f0          POP      {r4-r10,pc}
                  |L1.84|
000054  480b              LDR      r0,|L1.132|
000056  6800              LDR      r0,[r0,#0]            ;139  ; netif_list
000058  6020              STR      r0,[r4,#0]            ;139
00005a  480a              LDR      r0,|L1.132|
00005c  6004              STR      r4,[r0,#0]            ;140  ; netif_list
00005e  bf00              NOP                            ;150
000060  bf00              NOP                            ;150
000062  bf00              NOP                            ;152
000064  bf00              NOP                            ;152
000066  bf00              NOP                            ;153
000068  bf00              NOP                            ;153
00006a  bf00              NOP                            ;154
00006c  bf00              NOP                            ;154
00006e  bf00              NOP                            ;155
000070  bf00              NOP                            ;155
000072  bf00              NOP                            ;156
000074  bf00              NOP                            ;156
000076  bf00              NOP                            ;157
000078  bf00              NOP                            ;157
00007a  4620              MOV      r0,r4                 ;158
00007c  e7e8              B        |L1.80|
;;;160    
                          ENDP

00007e  0000              DCW      0x0000
                  |L1.128|
                          DCD      netifnum
                  |L1.132|
                          DCD      netif_list

                          AREA ||i.netif_find||, CODE, READONLY, ALIGN=2

                  netif_find PROC
;;;228    struct netif *
;;;229    netif_find(char *name)
000000  b510              PUSH     {r4,lr}
;;;230    {
000002  4602              MOV      r2,r0
;;;231      struct netif *netif;
;;;232      u8_t num;
;;;233    
;;;234      if (name == NULL) {
000004  b90a              CBNZ     r2,|L2.10|
;;;235        return NULL;
000006  2000              MOVS     r0,#0
                  |L2.8|
;;;236      }
;;;237    
;;;238      num = name[2] - '0';
;;;239    
;;;240      for(netif = netif_list; netif != NULL; netif = netif->next) {
;;;241        if (num == netif->num &&
;;;242           name[0] == netif->name[0] &&
;;;243           name[1] == netif->name[1]) {
;;;244          LWIP_DEBUGF(NETIF_DEBUG, ("netif_find: found %c%c\n", name[0], name[1]));
;;;245          return netif;
;;;246        }
;;;247      }
;;;248      LWIP_DEBUGF(NETIF_DEBUG, ("netif_find: didn't find %c%c\n", name[0], name[1]));
;;;249      return NULL;
;;;250    }
000008  bd10              POP      {r4,pc}
                  |L2.10|
00000a  7890              LDRB     r0,[r2,#2]            ;238
00000c  3830              SUBS     r0,r0,#0x30           ;238
00000e  b2c3              UXTB     r3,r0                 ;238
000010  480d              LDR      r0,|L2.72|
000012  6801              LDR      r1,[r0,#0]            ;240  ; netif_list
000014  e012              B        |L2.60|
                  |L2.22|
000016  f8910035          LDRB     r0,[r1,#0x35]         ;241
00001a  4298              CMP      r0,r3                 ;241
00001c  d10d              BNE      |L2.58|
00001e  7810              LDRB     r0,[r2,#0]            ;242
000020  f8914033          LDRB     r4,[r1,#0x33]         ;242
000024  42a0              CMP      r0,r4                 ;242
000026  d108              BNE      |L2.58|
000028  7854              LDRB     r4,[r2,#1]            ;243
00002a  2034              MOVS     r0,#0x34              ;243
00002c  5c40              LDRB     r0,[r0,r1]            ;243
00002e  4284              CMP      r4,r0                 ;243
000030  d103              BNE      |L2.58|
000032  bf00              NOP                            ;244
000034  bf00              NOP                            ;244
000036  4608              MOV      r0,r1                 ;245
000038  e7e6              B        |L2.8|
                  |L2.58|
00003a  6809              LDR      r1,[r1,#0]            ;240
                  |L2.60|
00003c  2900              CMP      r1,#0                 ;240
00003e  d1ea              BNE      |L2.22|
000040  bf00              NOP                            ;248
000042  bf00              NOP                            ;248
000044  2000              MOVS     r0,#0                 ;249
000046  e7df              B        |L2.8|
;;;251    
                          ENDP

                  |L2.72|
                          DCD      netif_list

                          AREA ||i.netif_is_up||, CODE, READONLY, ALIGN=1

                  netif_is_up PROC
;;;437     */ 
;;;438    u8_t netif_is_up(struct netif *netif)
000000  4601              MOV      r1,r0
;;;439    {
;;;440      return (netif->flags & NETIF_FLAG_UP)?1:0;
000002  f8910032          LDRB     r0,[r1,#0x32]
000006  f0000001          AND      r0,r0,#1
;;;441    }
00000a  4770              BX       lr
;;;442    
                          ENDP


                          AREA ||i.netif_remove||, CODE, READONLY, ALIGN=2

                  netif_remove PROC
;;;183     */
;;;184    void netif_remove(struct netif * netif)
000000  b500              PUSH     {lr}
;;;185    {
000002  4602              MOV      r2,r0
;;;186      if ( netif == NULL ) return;
000004  b902              CBNZ     r2,|L4.8|
                  |L4.6|
;;;187    
;;;188    #if LWIP_IGMP
;;;189      /* stop IGMP processing */
;;;190      if (netif->flags & NETIF_FLAG_IGMP) {
;;;191        igmp_stop( netif);
;;;192      }
;;;193    #endif /* LWIP_IGMP */
;;;194    
;;;195      snmp_delete_ipaddridx_tree(netif);
;;;196    
;;;197      /*  is it the first netif? */
;;;198      if (netif_list == netif) {
;;;199        netif_list = netif->next;
;;;200        snmp_dec_iflist();
;;;201      }
;;;202      else {
;;;203        /*  look for netif further down the list */
;;;204        struct netif * tmpNetif;
;;;205        for (tmpNetif = netif_list; tmpNetif != NULL; tmpNetif = tmpNetif->next) {
;;;206          if (tmpNetif->next == netif) {
;;;207            tmpNetif->next = netif->next;
;;;208            snmp_dec_iflist();
;;;209            break;
;;;210          }
;;;211        }
;;;212        if (tmpNetif == NULL)
;;;213          return; /*  we didn't find any netif today */
;;;214      }
;;;215      /* this netif is default? */
;;;216      if (netif_default == netif)
;;;217        /* reset default netif */
;;;218        netif_set_default(NULL);
;;;219      LWIP_DEBUGF( NETIF_DEBUG, ("netif_remove: removed netif\n") );
;;;220    }
000006  bd00              POP      {pc}
                  |L4.8|
000008  4811              LDR      r0,|L4.80|
00000a  6800              LDR      r0,[r0,#0]            ;198  ; netif_list
00000c  4290              CMP      r0,r2                 ;198
00000e  d103              BNE      |L4.24|
000010  490f              LDR      r1,|L4.80|
000012  6810              LDR      r0,[r2,#0]            ;199
000014  6008              STR      r0,[r1,#0]            ;199  ; netif_list
000016  e00f              B        |L4.56|
                  |L4.24|
000018  490d              LDR      r1,|L4.80|
00001a  6808              LDR      r0,[r1,#0]            ;205  ; netif_list
00001c  e006              B        |L4.44|
                  |L4.30|
00001e  6801              LDR      r1,[r0,#0]            ;206
000020  4291              CMP      r1,r2                 ;206
000022  d102              BNE      |L4.42|
000024  6811              LDR      r1,[r2,#0]            ;207
000026  6001              STR      r1,[r0,#0]            ;207
000028  e002              B        |L4.48|
                  |L4.42|
00002a  6800              LDR      r0,[r0,#0]            ;205
                  |L4.44|
00002c  2800              CMP      r0,#0                 ;205
00002e  d1f6              BNE      |L4.30|
                  |L4.48|
000030  bf00              NOP                            ;209
000032  b900              CBNZ     r0,|L4.54|
000034  e7e7              B        |L4.6|
                  |L4.54|
000036  bf00              NOP                            ;214
                  |L4.56|
000038  4806              LDR      r0,|L4.84|
00003a  6800              LDR      r0,[r0,#0]            ;216  ; netif_default
00003c  4290              CMP      r0,r2                 ;216
00003e  d102              BNE      |L4.70|
000040  2000              MOVS     r0,#0                 ;218
000042  f7fffffe          BL       netif_set_default
                  |L4.70|
000046  bf00              NOP                            ;219
000048  bf00              NOP                            ;219
00004a  bf00              NOP      
00004c  e7db              B        |L4.6|
;;;221    
                          ENDP

00004e  0000              DCW      0x0000
                  |L4.80|
                          DCD      netif_list
                  |L4.84|
                          DCD      netif_default

                          AREA ||i.netif_set_addr||, CODE, READONLY, ALIGN=1

                  netif_set_addr PROC
;;;170    void
;;;171    netif_set_addr(struct netif *netif, struct ip_addr *ipaddr, struct ip_addr *netmask,
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;172        struct ip_addr *gw)
;;;173    {
000004  4606              MOV      r6,r0
000006  460f              MOV      r7,r1
000008  4614              MOV      r4,r2
00000a  461d              MOV      r5,r3
;;;174      netif_set_ipaddr(netif, ipaddr);
00000c  4639              MOV      r1,r7
00000e  4630              MOV      r0,r6
000010  f7fffffe          BL       netif_set_ipaddr
;;;175      netif_set_netmask(netif, netmask);
000014  4621              MOV      r1,r4
000016  4630              MOV      r0,r6
000018  f7fffffe          BL       netif_set_netmask
;;;176      netif_set_gw(netif, gw);
00001c  4629              MOV      r1,r5
00001e  4630              MOV      r0,r6
000020  f7fffffe          BL       netif_set_gw
;;;177    }
000024  e8bd81f0          POP      {r4-r8,pc}
;;;178    
                          ENDP


                          AREA ||i.netif_set_default||, CODE, READONLY, ALIGN=2

                  netif_set_default PROC
;;;364    void
;;;365    netif_set_default(struct netif *netif)
000000  4902              LDR      r1,|L6.12|
;;;366    {
;;;367      if (netif == NULL)
;;;368      {
;;;369        /* remove default route */
;;;370        snmp_delete_iprteidx_tree(1, netif);
;;;371      }
;;;372      else
;;;373      {
;;;374        /* install default route */
;;;375        snmp_insert_iprteidx_tree(1, netif);
;;;376      }
;;;377      netif_default = netif;
000002  6008              STR      r0,[r1,#0]  ; netif_default
;;;378      LWIP_DEBUGF(NETIF_DEBUG, ("netif: setting default interface %c%c\n",
000004  bf00              NOP      
000006  bf00              NOP      
;;;379               netif ? netif->name[0] : '\'', netif ? netif->name[1] : '\''));
;;;380    }
000008  4770              BX       lr
;;;381    
                          ENDP

00000a  0000              DCW      0x0000
                  |L6.12|
                          DCD      netif_default

                          AREA ||i.netif_set_down||, CODE, READONLY, ALIGN=1

                  netif_set_down PROC
;;;420     */ 
;;;421    void netif_set_down(struct netif *netif)
000000  f8901032          LDRB     r1,[r0,#0x32]
;;;422    {
;;;423      if ( netif->flags & NETIF_FLAG_UP )
000004  f0110f01          TST      r1,#1
000008  d005              BEQ      |L7.22|
;;;424        {
;;;425          netif->flags &= ~NETIF_FLAG_UP;
00000a  f8901032          LDRB     r1,[r0,#0x32]
00000e  f0210101          BIC      r1,r1,#1
000012  f8801032          STRB     r1,[r0,#0x32]
                  |L7.22|
;;;426    #if LWIP_SNMP
;;;427          snmp_get_sysuptime(&netif->ts);
;;;428    #endif
;;;429          
;;;430          NETIF_LINK_CALLBACK(netif);
;;;431          NETIF_STATUS_CALLBACK(netif);
;;;432        }
;;;433    }
000016  4770              BX       lr
;;;434    
                          ENDP


                          AREA ||i.netif_set_gw||, CODE, READONLY, ALIGN=1

                  netif_set_gw PROC
;;;322    void
;;;323    netif_set_gw(struct netif *netif, struct ip_addr *gw)
000000  b909              CBNZ     r1,|L8.6|
;;;324    {
;;;325      ip_addr_set(&(netif->gw), gw);
000002  2200              MOVS     r2,#0
000004  e000              B        |L8.8|
                  |L8.6|
000006  680a              LDR      r2,[r1,#0]
                  |L8.8|
000008  60c2              STR      r2,[r0,#0xc]
;;;326      LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE | 3, ("netif: GW address of interface %c%c set to %"U16_F".%"U16_F".%"U16_F".%"U16_F"\n",
00000a  bf00              NOP      
00000c  bf00              NOP      
;;;327        netif->name[0], netif->name[1],
;;;328        ip4_addr1(&netif->gw),
;;;329        ip4_addr2(&netif->gw),
;;;330        ip4_addr3(&netif->gw),
;;;331        ip4_addr4(&netif->gw)));
;;;332    }
00000e  4770              BX       lr
;;;333    
                          ENDP


                          AREA ||i.netif_set_ipaddr||, CODE, READONLY, ALIGN=2

                  netif_set_ipaddr PROC
;;;261    void
;;;262    netif_set_ipaddr(struct netif *netif, struct ip_addr *ipaddr)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;263    {
000004  4607              MOV      r7,r0
000006  460d              MOV      r5,r1
;;;264      /* TODO: Handling of obsolete pcbs */
;;;265      /* See:  http://mail.gnu.org/archive/html/lwip-users/2003-03/msg00118.html */
;;;266    #if LWIP_TCP
;;;267      struct tcp_pcb *pcb;
;;;268      struct tcp_pcb_listen *lpcb;
;;;269    
;;;270      /* address is actually being changed? */
;;;271      if ((ip_addr_cmp(ipaddr, &(netif->ip_addr))) == 0)
000008  6828              LDR      r0,[r5,#0]
00000a  6879              LDR      r1,[r7,#4]
00000c  4288              CMP      r0,r1
00000e  d101              BNE      |L9.20|
000010  2001              MOVS     r0,#1
000012  e000              B        |L9.22|
                  |L9.20|
000014  2000              MOVS     r0,#0
                  |L9.22|
000016  bb38              CBNZ     r0,|L9.104|
;;;272      {
;;;273        /* extern struct tcp_pcb *tcp_active_pcbs; defined by tcp.h */
;;;274        LWIP_DEBUGF(NETIF_DEBUG | 1, ("netif_set_ipaddr: netif address being changed\n"));
000018  bf00              NOP      
00001a  bf00              NOP      
;;;275        pcb = tcp_active_pcbs;
00001c  4817              LDR      r0,|L9.124|
00001e  6806              LDR      r6,[r0,#0]  ; tcp_active_pcbs
;;;276        while (pcb != NULL) {
000020  e00e              B        |L9.64|
                  |L9.34|
;;;277          /* PCB bound to current local interface address? */
;;;278          if (ip_addr_cmp(&(pcb->local_ip), &(netif->ip_addr))) {
000022  6830              LDR      r0,[r6,#0]
000024  6879              LDR      r1,[r7,#4]
000026  4288              CMP      r0,r1
000028  d109              BNE      |L9.62|
;;;279            /* this connection must be aborted */
;;;280            struct tcp_pcb *next = pcb->next;
00002a  f8d6800c          LDR      r8,[r6,#0xc]
;;;281            LWIP_DEBUGF(NETIF_DEBUG | 1, ("netif_set_ipaddr: aborting TCP pcb %p\n", (void *)pcb));
00002e  bf00              NOP      
000030  bf00              NOP      
;;;282            tcp_abort(pcb);
000032  2101              MOVS     r1,#1
000034  4630              MOV      r0,r6
000036  f7fffffe          BL       tcp_abandon
;;;283            pcb = next;
00003a  4646              MOV      r6,r8
;;;284          } else {
00003c  e000              B        |L9.64|
                  |L9.62|
;;;285            pcb = pcb->next;
00003e  68f6              LDR      r6,[r6,#0xc]
                  |L9.64|
000040  2e00              CMP      r6,#0                 ;276
000042  d1ee              BNE      |L9.34|
;;;286          }
;;;287        }
;;;288        for (lpcb = tcp_listen_pcbs.listen_pcbs; lpcb != NULL; lpcb = lpcb->next) {
000044  480e              LDR      r0,|L9.128|
000046  6804              LDR      r4,[r0,#0]  ; tcp_listen_pcbs
000048  e00c              B        |L9.100|
                  |L9.74|
;;;289          /* PCB bound to current local interface address? */
;;;290          if ((!(ip_addr_isany(&(lpcb->local_ip)))) &&
00004a  b154              CBZ      r4,|L9.98|
00004c  6820              LDR      r0,[r4,#0]
00004e  b140              CBZ      r0,|L9.98|
;;;291              (ip_addr_cmp(&(lpcb->local_ip), &(netif->ip_addr)))) {
000050  6820              LDR      r0,[r4,#0]
000052  6879              LDR      r1,[r7,#4]
000054  4288              CMP      r0,r1
000056  d104              BNE      |L9.98|
;;;292            /* The PCB is listening to the old ipaddr and
;;;293             * is set to listen to the new one instead */
;;;294            ip_addr_set(&(lpcb->local_ip), ipaddr);
000058  b90d              CBNZ     r5,|L9.94|
00005a  2000              MOVS     r0,#0
00005c  e000              B        |L9.96|
                  |L9.94|
00005e  6828              LDR      r0,[r5,#0]
                  |L9.96|
000060  6020              STR      r0,[r4,#0]
                  |L9.98|
000062  68e4              LDR      r4,[r4,#0xc]          ;288
                  |L9.100|
000064  2c00              CMP      r4,#0                 ;288
000066  d1f0              BNE      |L9.74|
                  |L9.104|
;;;295          }
;;;296        }
;;;297      }
;;;298    #endif
;;;299      snmp_delete_ipaddridx_tree(netif);
;;;300      snmp_delete_iprteidx_tree(0,netif);
;;;301      /* set new IP address to netif */
;;;302      ip_addr_set(&(netif->ip_addr), ipaddr);
000068  b90d              CBNZ     r5,|L9.110|
00006a  2000              MOVS     r0,#0
00006c  e000              B        |L9.112|
                  |L9.110|
00006e  6828              LDR      r0,[r5,#0]
                  |L9.112|
000070  6078              STR      r0,[r7,#4]
;;;303      snmp_insert_ipaddridx_tree(netif);
;;;304      snmp_insert_iprteidx_tree(0,netif);
;;;305    
;;;306      LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE | 3, ("netif: IP address of interface %c%c set to %"U16_F".%"U16_F".%"U16_F".%"U16_F"\n",
000072  bf00              NOP      
000074  bf00              NOP      
;;;307        netif->name[0], netif->name[1],
;;;308        ip4_addr1(&netif->ip_addr),
;;;309        ip4_addr2(&netif->ip_addr),
;;;310        ip4_addr3(&netif->ip_addr),
;;;311        ip4_addr4(&netif->ip_addr)));
;;;312    }
000076  e8bd81f0          POP      {r4-r8,pc}
;;;313    
                          ENDP

00007a  0000              DCW      0x0000
                  |L9.124|
                          DCD      tcp_active_pcbs
                  |L9.128|
                          DCD      tcp_listen_pcbs

                          AREA ||i.netif_set_netmask||, CODE, READONLY, ALIGN=1

                  netif_set_netmask PROC
;;;343    void
;;;344    netif_set_netmask(struct netif *netif, struct ip_addr *netmask)
000000  b909              CBNZ     r1,|L10.6|
;;;345    {
;;;346      snmp_delete_iprteidx_tree(0, netif);
;;;347      /* set new netmask to netif */
;;;348      ip_addr_set(&(netif->netmask), netmask);
000002  2200              MOVS     r2,#0
000004  e000              B        |L10.8|
                  |L10.6|
000006  680a              LDR      r2,[r1,#0]
                  |L10.8|
000008  6082              STR      r2,[r0,#8]
;;;349      snmp_insert_iprteidx_tree(0, netif);
;;;350      LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE | 3, ("netif: netmask of interface %c%c set to %"U16_F".%"U16_F".%"U16_F".%"U16_F"\n",
00000a  bf00              NOP      
00000c  bf00              NOP      
;;;351        netif->name[0], netif->name[1],
;;;352        ip4_addr1(&netif->netmask),
;;;353        ip4_addr2(&netif->netmask),
;;;354        ip4_addr3(&netif->netmask),
;;;355        ip4_addr4(&netif->netmask)));
;;;356    }
00000e  4770              BX       lr
;;;357    
                          ENDP


                          AREA ||i.netif_set_up||, CODE, READONLY, ALIGN=1

                  netif_set_up PROC
;;;390     */ 
;;;391    void netif_set_up(struct netif *netif)
000000  b510              PUSH     {r4,lr}
;;;392    {
000002  4604              MOV      r4,r0
;;;393      if ( !(netif->flags & NETIF_FLAG_UP )) {
000004  f8940032          LDRB     r0,[r4,#0x32]
000008  f0100f01          TST      r0,#1
00000c  d10d              BNE      |L11.42|
;;;394        netif->flags |= NETIF_FLAG_UP;
00000e  f8140f32          LDRB     r0,[r4,#0x32]!
000012  f0400001          ORR      r0,r0,#1
000016  7020              STRB     r0,[r4,#0]
;;;395        
;;;396    #if LWIP_SNMP
;;;397        snmp_get_sysuptime(&netif->ts);
;;;398    #endif /* LWIP_SNMP */
;;;399    
;;;400        NETIF_LINK_CALLBACK(netif);
;;;401        NETIF_STATUS_CALLBACK(netif);
;;;402    
;;;403    #if LWIP_ARP
;;;404        /* For Ethernet network interfaces, we would like to send a "gratuitous ARP" */ 
;;;405        if (netif->flags & NETIF_FLAG_ETHARP) {
000018  f8140932          LDRB     r0,[r4],#-0x32
00001c  f0100f20          TST      r0,#0x20
000020  d003              BEQ      |L11.42|
;;;406          etharp_gratuitous(netif);
000022  1d21              ADDS     r1,r4,#4
000024  4620              MOV      r0,r4
000026  f7fffffe          BL       etharp_request
                  |L11.42|
;;;407        }
;;;408    #endif /* LWIP_ARP */
;;;409        
;;;410      }
;;;411    }
00002a  bd10              POP      {r4,pc}
;;;412    
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  netifnum
000000  00000000          DCB      0x00,0x00,0x00,0x00
                  netif_list
                          DCD      0x00000000
                  netif_default
                          DCD      0x00000000
