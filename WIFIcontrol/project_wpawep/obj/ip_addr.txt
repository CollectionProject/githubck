; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--split_sections --debug -c --asm --interleave -o.\obj\ip_addr.o --depend=.\obj\ip_addr.d --feedback=.\obj\wifi.fed --cpu=Cortex-M3 --apcs=interwork -O0 -I..\lwIP\src\include -I..\lwIP\port\include -I..\lwIP\src\include\ipv4 -I..\target -I..\netapp -I..\marvel\driver\inc -I..\marvel\wpa\inc -I..\sdio\inc -I..\main -ID:\keilarm\ARM\INC -ID:\keilarm\ARM\INC\ST\STM32F10x -D__MICROLIB -DIEEE8021X_EAPOL -DOS_NO_C_LIB_DEFINES -DCONFIG_PEERKEY -DCONFIG_IEEE80211W -DCONFIG_IEEE80211R -DxCLOSE_WPA_LIMIT --omf_browse=.\obj\ip_addr.crf ..\lwIP\src\core\ipv4\ip_addr.c]
                          THUMB

                          AREA ||i.ip_addr_isbroadcast||, CODE, READONLY, ALIGN=1

                  ip_addr_isbroadcast PROC
;;;57      */
;;;58     u8_t ip_addr_isbroadcast(struct ip_addr *addr, struct netif *netif)
000000  b530              PUSH     {r4,r5,lr}
;;;59     {
000002  4603              MOV      r3,r0
;;;60       u32_t addr2test;
;;;61     
;;;62       addr2test = addr->addr;
000004  681a              LDR      r2,[r3,#0]
;;;63       /* all ones (broadcast) or all zeroes (old skool broadcast) */
;;;64       if ((~addr2test == IP_ADDR_ANY_VALUE) ||
000006  43d0              MVNS     r0,r2
000008  d000              BEQ      |L1.12|
;;;65           (addr2test == IP_ADDR_ANY_VALUE))
00000a  b90a              CBNZ     r2,|L1.16|
                  |L1.12|
;;;66         return 1;
00000c  2001              MOVS     r0,#1
                  |L1.14|
;;;67       /* no broadcast support on this network interface? */
;;;68       else if ((netif->flags & NETIF_FLAG_BROADCAST) == 0)
;;;69         /* the given address cannot be a broadcast address
;;;70          * nor can we check against any broadcast addresses */
;;;71         return 0;
;;;72       /* address matches network interface address exactly? => no broadcast */
;;;73       else if (addr2test == netif->ip_addr.addr)
;;;74         return 0;
;;;75       /*  on the same (sub) network... */
;;;76       else if (ip_addr_netcmp(addr, &(netif->ip_addr), &(netif->netmask))
;;;77              /* ...and host identifier bits are all ones? =>... */
;;;78               && ((addr2test & ~netif->netmask.addr) ==
;;;79                (IP_ADDR_BROADCAST_VALUE & ~netif->netmask.addr)))
;;;80         /* => network broadcast address */
;;;81         return 1;
;;;82       else
;;;83         return 0;
;;;84     }
00000e  bd30              POP      {r4,r5,pc}
                  |L1.16|
000010  f8910032          LDRB     r0,[r1,#0x32]         ;68
000014  f0100f02          TST      r0,#2                 ;68
000018  d101              BNE      |L1.30|
00001a  2000              MOVS     r0,#0                 ;71
00001c  e7f7              B        |L1.14|
                  |L1.30|
00001e  6848              LDR      r0,[r1,#4]            ;73
000020  4290              CMP      r0,r2                 ;73
000022  d101              BNE      |L1.40|
000024  2000              MOVS     r0,#0                 ;74
000026  e7f2              B        |L1.14|
                  |L1.40|
000028  6818              LDR      r0,[r3,#0]            ;76
00002a  688c              LDR      r4,[r1,#8]            ;76
00002c  4020              ANDS     r0,r0,r4              ;76
00002e  e9d14501          LDRD     r4,r5,[r1,#4]         ;76
000032  402c              ANDS     r4,r4,r5              ;76
000034  42a0              CMP      r0,r4                 ;76
000036  d108              BNE      |L1.74|
000038  6888              LDR      r0,[r1,#8]            ;78
00003a  ea220000          BIC      r0,r2,r0              ;78
00003e  688d              LDR      r5,[r1,#8]            ;78
000040  43ec              MVNS     r4,r5                 ;78
000042  42a0              CMP      r0,r4                 ;78
000044  d101              BNE      |L1.74|
000046  2001              MOVS     r0,#1                 ;81
000048  e7e1              B        |L1.14|
                  |L1.74|
00004a  2000              MOVS     r0,#0                 ;83
00004c  e7df              B        |L1.14|
                          ENDP


                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  ip_addr_any
                          DCDU     0x00000000
                  ip_addr_broadcast
                          DCDU     0xffffffff
